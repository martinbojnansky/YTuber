//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace YTuber
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlTypeInfoProvider _provider;

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace YTuber.YTuber_WindowsPhone_XamlTypeInfo
{
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[33];
            _typeNameTable[0] = "Windows.UI.Color";
            _typeNameTable[1] = "System.ValueType";
            _typeNameTable[2] = "Object";
            _typeNameTable[3] = "Byte";
            _typeNameTable[4] = "YTuber.Converters.BooleanToVisibilityConverter";
            _typeNameTable[5] = "YTuber.Converters.InverseBooleanToVisibilityConverter";
            _typeNameTable[6] = "YTuber.Converters.InverseBooleanConverter";
            _typeNameTable[7] = "YTuber.Controls.AdvertisementBanner";
            _typeNameTable[8] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[9] = "YTuber.Controls.ConvertNotification";
            _typeNameTable[10] = "Boolean";
            _typeNameTable[11] = "String";
            _typeNameTable[12] = "System.Windows.Input.ICommand";
            _typeNameTable[13] = "YTuber.Controls.DownloadNotification";
            _typeNameTable[14] = "YTuber.Controls.DownloadsListView";
            _typeNameTable[15] = "System.Collections.ObjectModel.ObservableCollection`1<YTuber.Models.Download.DownloadOperationObject>";
            _typeNameTable[16] = "System.Collections.ObjectModel.Collection`1<YTuber.Models.Download.DownloadOperationObject>";
            _typeNameTable[17] = "YTuber.Models.Download.DownloadOperationObject";
            _typeNameTable[18] = "YTuber.Base.ModelBase";
            _typeNameTable[19] = "Double";
            _typeNameTable[20] = "Windows.Networking.BackgroundTransfer.DownloadOperation";
            _typeNameTable[21] = "System.Threading.CancellationTokenSource";
            _typeNameTable[22] = "YTuber.Controls.HelpItem";
            _typeNameTable[23] = "YTuber.Base.NavigationPage";
            _typeNameTable[24] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[25] = "YTuber.Views.About.AboutView";
            _typeNameTable[26] = "YTuber.Views.Addons.AddonsView";
            _typeNameTable[27] = "YTuber.Views.Help.HelpView";
            _typeNameTable[28] = "YTuber.Base.NavigationLink";
            _typeNameTable[29] = "Windows.UI.Xaml.Controls.Symbol";
            _typeNameTable[30] = "System.Type";
            _typeNameTable[31] = "YTuber.Views.Main.MainView";
            _typeNameTable[32] = "YTuber.Views.Promotion.PromotionView";

            _typeTable = new global::System.Type[33];
            _typeTable[0] = typeof(global::Windows.UI.Color);
            _typeTable[1] = typeof(global::System.ValueType);
            _typeTable[2] = typeof(global::System.Object);
            _typeTable[3] = typeof(global::System.Byte);
            _typeTable[4] = typeof(global::YTuber.Converters.BooleanToVisibilityConverter);
            _typeTable[5] = typeof(global::YTuber.Converters.InverseBooleanToVisibilityConverter);
            _typeTable[6] = typeof(global::YTuber.Converters.InverseBooleanConverter);
            _typeTable[7] = typeof(global::YTuber.Controls.AdvertisementBanner);
            _typeTable[8] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[9] = typeof(global::YTuber.Controls.ConvertNotification);
            _typeTable[10] = typeof(global::System.Boolean);
            _typeTable[11] = typeof(global::System.String);
            _typeTable[12] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[13] = typeof(global::YTuber.Controls.DownloadNotification);
            _typeTable[14] = typeof(global::YTuber.Controls.DownloadsListView);
            _typeTable[15] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::YTuber.Models.Download.DownloadOperationObject>);
            _typeTable[16] = typeof(global::System.Collections.ObjectModel.Collection<global::YTuber.Models.Download.DownloadOperationObject>);
            _typeTable[17] = typeof(global::YTuber.Models.Download.DownloadOperationObject);
            _typeTable[18] = typeof(global::YTuber.Base.ModelBase);
            _typeTable[19] = typeof(global::System.Double);
            _typeTable[20] = typeof(global::Windows.Networking.BackgroundTransfer.DownloadOperation);
            _typeTable[21] = typeof(global::System.Threading.CancellationTokenSource);
            _typeTable[22] = typeof(global::YTuber.Controls.HelpItem);
            _typeTable[23] = typeof(global::YTuber.Base.NavigationPage);
            _typeTable[24] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[25] = typeof(global::YTuber.Views.About.AboutView);
            _typeTable[26] = typeof(global::YTuber.Views.Addons.AddonsView);
            _typeTable[27] = typeof(global::YTuber.Views.Help.HelpView);
            _typeTable[28] = typeof(global::YTuber.Base.NavigationLink);
            _typeTable[29] = typeof(global::Windows.UI.Xaml.Controls.Symbol);
            _typeTable[30] = typeof(global::System.Type);
            _typeTable[31] = typeof(global::YTuber.Views.Main.MainView);
            _typeTable[32] = typeof(global::YTuber.Views.Promotion.PromotionView);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_4_BooleanToVisibilityConverter() { return new global::YTuber.Converters.BooleanToVisibilityConverter(); }
        private object Activate_5_InverseBooleanToVisibilityConverter() { return new global::YTuber.Converters.InverseBooleanToVisibilityConverter(); }
        private object Activate_6_InverseBooleanConverter() { return new global::YTuber.Converters.InverseBooleanConverter(); }
        private object Activate_7_AdvertisementBanner() { return new global::YTuber.Controls.AdvertisementBanner(); }
        private object Activate_9_ConvertNotification() { return new global::YTuber.Controls.ConvertNotification(); }
        private object Activate_13_DownloadNotification() { return new global::YTuber.Controls.DownloadNotification(); }
        private object Activate_14_DownloadsListView() { return new global::YTuber.Controls.DownloadsListView(); }
        private object Activate_15_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::YTuber.Models.Download.DownloadOperationObject>(); }
        private object Activate_16_Collection() { return new global::System.Collections.ObjectModel.Collection<global::YTuber.Models.Download.DownloadOperationObject>(); }
        private object Activate_21_CancellationTokenSource() { return new global::System.Threading.CancellationTokenSource(); }
        private object Activate_22_HelpItem() { return new global::YTuber.Controls.HelpItem(); }
        private object Activate_25_AboutView() { return new global::YTuber.Views.About.AboutView(); }
        private object Activate_26_AddonsView() { return new global::YTuber.Views.Addons.AddonsView(); }
        private object Activate_27_HelpView() { return new global::YTuber.Views.Help.HelpView(); }
        private object Activate_28_NavigationLink() { return new global::YTuber.Base.NavigationLink(); }
        private object Activate_31_MainView() { return new global::YTuber.Views.Main.MainView(); }
        private object Activate_32_PromotionView() { return new global::YTuber.Views.Promotion.PromotionView(); }
        private void VectorAdd_15_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::YTuber.Models.Download.DownloadOperationObject>)instance;
            var newItem = (global::YTuber.Models.Download.DownloadOperationObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_16_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::YTuber.Models.Download.DownloadOperationObject>)instance;
            var newItem = (global::YTuber.Models.Download.DownloadOperationObject)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Windows.UI.Color
                userType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.AddMemberName("A");
                userType.AddMemberName("B");
                userType.AddMemberName("G");
                userType.AddMemberName("R");
                xamlType = userType;
                break;

            case 1:   //  System.ValueType
                userType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 2:   //  Object
                xamlType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Byte
                userType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 4:   //  YTuber.Converters.BooleanToVisibilityConverter
                userType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_4_BooleanToVisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 5:   //  YTuber.Converters.InverseBooleanToVisibilityConverter
                userType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_5_InverseBooleanToVisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 6:   //  YTuber.Converters.InverseBooleanConverter
                userType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_6_InverseBooleanConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 7:   //  YTuber.Controls.AdvertisementBanner
                userType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_7_AdvertisementBanner;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 8:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 9:   //  YTuber.Controls.ConvertNotification
                userType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_9_ConvertNotification;
                userType.AddMemberName("IsVisible");
                userType.AddMemberName("Status");
                userType.AddMemberName("CancelCommand");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 10:   //  Boolean
                xamlType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 11:   //  String
                xamlType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 12:   //  System.Windows.Input.ICommand
                userType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 13:   //  YTuber.Controls.DownloadNotification
                userType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_13_DownloadNotification;
                userType.AddMemberName("IsActive");
                userType.AddMemberName("Label");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 14:   //  YTuber.Controls.DownloadsListView
                userType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_14_DownloadsListView;
                userType.AddMemberName("IsActive");
                userType.AddMemberName("Downloads");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 15:   //  System.Collections.ObjectModel.ObservableCollection`1<YTuber.Models.Download.DownloadOperationObject>
                userType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<YTuber.Models.Download.DownloadOperationObject>"));
                userType.CollectionAdd = VectorAdd_15_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 16:   //  System.Collections.ObjectModel.Collection`1<YTuber.Models.Download.DownloadOperationObject>
                userType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_16_Collection;
                userType.CollectionAdd = VectorAdd_16_Collection;
                xamlType = userType;
                break;

            case 17:   //  YTuber.Models.Download.DownloadOperationObject
                userType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("YTuber.Base.ModelBase"));
                userType.AddMemberName("Progress");
                userType.AddMemberName("CancelCommand");
                userType.AddMemberName("DownloadOperation");
                userType.AddMemberName("CancellationToken");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 18:   //  YTuber.Base.ModelBase
                userType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 19:   //  Double
                xamlType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  Windows.Networking.BackgroundTransfer.DownloadOperation
                userType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 21:   //  System.Threading.CancellationTokenSource
                userType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 22:   //  YTuber.Controls.HelpItem
                userType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_22_HelpItem;
                userType.AddMemberName("Source");
                userType.AddMemberName("Description");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 23:   //  YTuber.Base.NavigationPage
                userType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 24:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 25:   //  YTuber.Views.About.AboutView
                userType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("YTuber.Base.NavigationPage"));
                userType.Activator = Activate_25_AboutView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 26:   //  YTuber.Views.Addons.AddonsView
                userType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("YTuber.Base.NavigationPage"));
                userType.Activator = Activate_26_AddonsView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 27:   //  YTuber.Views.Help.HelpView
                userType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("YTuber.Base.NavigationPage"));
                userType.Activator = Activate_27_HelpView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 28:   //  YTuber.Base.NavigationLink
                userType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_28_NavigationLink;
                userType.AddMemberName("Symbol");
                userType.AddMemberName("Title");
                userType.AddMemberName("PageType");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 29:   //  Windows.UI.Xaml.Controls.Symbol
                xamlType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 30:   //  System.Type
                userType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 31:   //  YTuber.Views.Main.MainView
                userType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("YTuber.Base.NavigationPage"));
                userType.Activator = Activate_31_MainView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 32:   //  YTuber.Views.Promotion.PromotionView
                userType = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("YTuber.Base.NavigationPage"));
                userType.Activator = Activate_32_PromotionView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    _otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Microsoft.AdMediator.WindowsPhone81.AdMediator_WindowsPhone81_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    _otherProviders.Add(provider); 
                    provider = new global::Microsoft.Advertising.UniversalXamlAdControl_WindowsPhone_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    _otherProviders.Add(provider); 
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_Color_A(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.A;
        }
        private void set_0_Color_A(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.A = (global::System.Byte)Value;
        }
        private object get_1_Color_B(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.B;
        }
        private void set_1_Color_B(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.B = (global::System.Byte)Value;
        }
        private object get_2_Color_G(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.G;
        }
        private void set_2_Color_G(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.G = (global::System.Byte)Value;
        }
        private object get_3_Color_R(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.R;
        }
        private void set_3_Color_R(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.R = (global::System.Byte)Value;
        }
        private object get_4_ConvertNotification_IsVisible(object instance)
        {
            var that = (global::YTuber.Controls.ConvertNotification)instance;
            return that.IsVisible;
        }
        private void set_4_ConvertNotification_IsVisible(object instance, object Value)
        {
            var that = (global::YTuber.Controls.ConvertNotification)instance;
            that.IsVisible = (global::System.Boolean)Value;
        }
        private object get_5_ConvertNotification_Status(object instance)
        {
            var that = (global::YTuber.Controls.ConvertNotification)instance;
            return that.Status;
        }
        private void set_5_ConvertNotification_Status(object instance, object Value)
        {
            var that = (global::YTuber.Controls.ConvertNotification)instance;
            that.Status = (global::System.String)Value;
        }
        private object get_6_ConvertNotification_CancelCommand(object instance)
        {
            var that = (global::YTuber.Controls.ConvertNotification)instance;
            return that.CancelCommand;
        }
        private void set_6_ConvertNotification_CancelCommand(object instance, object Value)
        {
            var that = (global::YTuber.Controls.ConvertNotification)instance;
            that.CancelCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_7_DownloadNotification_IsActive(object instance)
        {
            var that = (global::YTuber.Controls.DownloadNotification)instance;
            return that.IsActive;
        }
        private void set_7_DownloadNotification_IsActive(object instance, object Value)
        {
            var that = (global::YTuber.Controls.DownloadNotification)instance;
            that.IsActive = (global::System.Boolean)Value;
        }
        private object get_8_DownloadNotification_Label(object instance)
        {
            var that = (global::YTuber.Controls.DownloadNotification)instance;
            return that.Label;
        }
        private void set_8_DownloadNotification_Label(object instance, object Value)
        {
            var that = (global::YTuber.Controls.DownloadNotification)instance;
            that.Label = (global::System.String)Value;
        }
        private object get_9_DownloadsListView_IsActive(object instance)
        {
            var that = (global::YTuber.Controls.DownloadsListView)instance;
            return that.IsActive;
        }
        private void set_9_DownloadsListView_IsActive(object instance, object Value)
        {
            var that = (global::YTuber.Controls.DownloadsListView)instance;
            that.IsActive = (global::System.Boolean)Value;
        }
        private object get_10_DownloadsListView_Downloads(object instance)
        {
            var that = (global::YTuber.Controls.DownloadsListView)instance;
            return that.Downloads;
        }
        private void set_10_DownloadsListView_Downloads(object instance, object Value)
        {
            var that = (global::YTuber.Controls.DownloadsListView)instance;
            that.Downloads = (global::System.Collections.ObjectModel.ObservableCollection<global::YTuber.Models.Download.DownloadOperationObject>)Value;
        }
        private object get_11_DownloadOperationObject_Progress(object instance)
        {
            var that = (global::YTuber.Models.Download.DownloadOperationObject)instance;
            return that.Progress;
        }
        private void set_11_DownloadOperationObject_Progress(object instance, object Value)
        {
            var that = (global::YTuber.Models.Download.DownloadOperationObject)instance;
            that.Progress = (global::System.Double)Value;
        }
        private object get_12_DownloadOperationObject_CancelCommand(object instance)
        {
            var that = (global::YTuber.Models.Download.DownloadOperationObject)instance;
            return that.CancelCommand;
        }
        private object get_13_DownloadOperationObject_DownloadOperation(object instance)
        {
            var that = (global::YTuber.Models.Download.DownloadOperationObject)instance;
            return that.DownloadOperation;
        }
        private object get_14_DownloadOperationObject_CancellationToken(object instance)
        {
            var that = (global::YTuber.Models.Download.DownloadOperationObject)instance;
            return that.CancellationToken;
        }
        private void set_14_DownloadOperationObject_CancellationToken(object instance, object Value)
        {
            var that = (global::YTuber.Models.Download.DownloadOperationObject)instance;
            that.CancellationToken = (global::System.Threading.CancellationTokenSource)Value;
        }
        private object get_15_HelpItem_Source(object instance)
        {
            var that = (global::YTuber.Controls.HelpItem)instance;
            return that.Source;
        }
        private void set_15_HelpItem_Source(object instance, object Value)
        {
            var that = (global::YTuber.Controls.HelpItem)instance;
            that.Source = (global::System.String)Value;
        }
        private object get_16_HelpItem_Description(object instance)
        {
            var that = (global::YTuber.Controls.HelpItem)instance;
            return that.Description;
        }
        private void set_16_HelpItem_Description(object instance, object Value)
        {
            var that = (global::YTuber.Controls.HelpItem)instance;
            that.Description = (global::System.String)Value;
        }
        private object get_17_NavigationLink_Symbol(object instance)
        {
            var that = (global::YTuber.Base.NavigationLink)instance;
            return that.Symbol;
        }
        private void set_17_NavigationLink_Symbol(object instance, object Value)
        {
            var that = (global::YTuber.Base.NavigationLink)instance;
            that.Symbol = (global::Windows.UI.Xaml.Controls.Symbol)Value;
        }
        private object get_18_NavigationLink_Title(object instance)
        {
            var that = (global::YTuber.Base.NavigationLink)instance;
            return that.Title;
        }
        private void set_18_NavigationLink_Title(object instance, object Value)
        {
            var that = (global::YTuber.Base.NavigationLink)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_19_NavigationLink_PageType(object instance)
        {
            var that = (global::YTuber.Base.NavigationLink)instance;
            return that.PageType;
        }
        private void set_19_NavigationLink_PageType(object instance, object Value)
        {
            var that = (global::YTuber.Base.NavigationLink)instance;
            that.PageType = (global::System.Type)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlMember xamlMember = null;
            global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Windows.UI.Color.A":
                userType = (global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlMember(this, "A", "Byte");
                xamlMember.Getter = get_0_Color_A;
                xamlMember.Setter = set_0_Color_A;
                break;
            case "Windows.UI.Color.B":
                userType = (global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlMember(this, "B", "Byte");
                xamlMember.Getter = get_1_Color_B;
                xamlMember.Setter = set_1_Color_B;
                break;
            case "Windows.UI.Color.G":
                userType = (global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlMember(this, "G", "Byte");
                xamlMember.Getter = get_2_Color_G;
                xamlMember.Setter = set_2_Color_G;
                break;
            case "Windows.UI.Color.R":
                userType = (global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlMember(this, "R", "Byte");
                xamlMember.Getter = get_3_Color_R;
                xamlMember.Setter = set_3_Color_R;
                break;
            case "YTuber.Controls.ConvertNotification.IsVisible":
                userType = (global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("YTuber.Controls.ConvertNotification");
                xamlMember = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlMember(this, "IsVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_ConvertNotification_IsVisible;
                xamlMember.Setter = set_4_ConvertNotification_IsVisible;
                break;
            case "YTuber.Controls.ConvertNotification.Status":
                userType = (global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("YTuber.Controls.ConvertNotification");
                xamlMember = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlMember(this, "Status", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_ConvertNotification_Status;
                xamlMember.Setter = set_5_ConvertNotification_Status;
                break;
            case "YTuber.Controls.ConvertNotification.CancelCommand":
                userType = (global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("YTuber.Controls.ConvertNotification");
                xamlMember = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlMember(this, "CancelCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_ConvertNotification_CancelCommand;
                xamlMember.Setter = set_6_ConvertNotification_CancelCommand;
                break;
            case "YTuber.Controls.DownloadNotification.IsActive":
                userType = (global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("YTuber.Controls.DownloadNotification");
                xamlMember = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlMember(this, "IsActive", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_DownloadNotification_IsActive;
                xamlMember.Setter = set_7_DownloadNotification_IsActive;
                break;
            case "YTuber.Controls.DownloadNotification.Label":
                userType = (global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("YTuber.Controls.DownloadNotification");
                xamlMember = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlMember(this, "Label", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_DownloadNotification_Label;
                xamlMember.Setter = set_8_DownloadNotification_Label;
                break;
            case "YTuber.Controls.DownloadsListView.IsActive":
                userType = (global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("YTuber.Controls.DownloadsListView");
                xamlMember = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlMember(this, "IsActive", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_DownloadsListView_IsActive;
                xamlMember.Setter = set_9_DownloadsListView_IsActive;
                break;
            case "YTuber.Controls.DownloadsListView.Downloads":
                userType = (global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("YTuber.Controls.DownloadsListView");
                xamlMember = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlMember(this, "Downloads", "System.Collections.ObjectModel.ObservableCollection`1<YTuber.Models.Download.DownloadOperationObject>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_DownloadsListView_Downloads;
                xamlMember.Setter = set_10_DownloadsListView_Downloads;
                break;
            case "YTuber.Models.Download.DownloadOperationObject.Progress":
                userType = (global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("YTuber.Models.Download.DownloadOperationObject");
                xamlMember = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlMember(this, "Progress", "Double");
                xamlMember.Getter = get_11_DownloadOperationObject_Progress;
                xamlMember.Setter = set_11_DownloadOperationObject_Progress;
                break;
            case "YTuber.Models.Download.DownloadOperationObject.CancelCommand":
                userType = (global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("YTuber.Models.Download.DownloadOperationObject");
                xamlMember = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlMember(this, "CancelCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_12_DownloadOperationObject_CancelCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "YTuber.Models.Download.DownloadOperationObject.DownloadOperation":
                userType = (global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("YTuber.Models.Download.DownloadOperationObject");
                xamlMember = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlMember(this, "DownloadOperation", "Windows.Networking.BackgroundTransfer.DownloadOperation");
                xamlMember.Getter = get_13_DownloadOperationObject_DownloadOperation;
                xamlMember.SetIsReadOnly();
                break;
            case "YTuber.Models.Download.DownloadOperationObject.CancellationToken":
                userType = (global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("YTuber.Models.Download.DownloadOperationObject");
                xamlMember = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlMember(this, "CancellationToken", "System.Threading.CancellationTokenSource");
                xamlMember.Getter = get_14_DownloadOperationObject_CancellationToken;
                xamlMember.Setter = set_14_DownloadOperationObject_CancellationToken;
                break;
            case "YTuber.Controls.HelpItem.Source":
                userType = (global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("YTuber.Controls.HelpItem");
                xamlMember = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlMember(this, "Source", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_HelpItem_Source;
                xamlMember.Setter = set_15_HelpItem_Source;
                break;
            case "YTuber.Controls.HelpItem.Description":
                userType = (global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("YTuber.Controls.HelpItem");
                xamlMember = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlMember(this, "Description", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_HelpItem_Description;
                xamlMember.Setter = set_16_HelpItem_Description;
                break;
            case "YTuber.Base.NavigationLink.Symbol":
                userType = (global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("YTuber.Base.NavigationLink");
                xamlMember = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlMember(this, "Symbol", "Windows.UI.Xaml.Controls.Symbol");
                xamlMember.Getter = get_17_NavigationLink_Symbol;
                xamlMember.Setter = set_17_NavigationLink_Symbol;
                break;
            case "YTuber.Base.NavigationLink.Title":
                userType = (global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("YTuber.Base.NavigationLink");
                xamlMember = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_18_NavigationLink_Title;
                xamlMember.Setter = set_18_NavigationLink_Title;
                break;
            case "YTuber.Base.NavigationLink.PageType":
                userType = (global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("YTuber.Base.NavigationLink");
                xamlMember = new global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlMember(this, "PageType", "System.Type");
                xamlMember.Getter = get_19_NavigationLink_PageType;
                xamlMember.Setter = set_19_NavigationLink_PageType;
                break;
            }
            return xamlMember;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlSystemBaseType
    {
        global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::YTuber.YTuber_WindowsPhone_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}


